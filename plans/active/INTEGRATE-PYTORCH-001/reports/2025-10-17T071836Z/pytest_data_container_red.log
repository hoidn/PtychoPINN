============================= test session starts ==============================
platform linux -- Python 3.11.13, pytest-8.4.1, pluggy-1.6.0 -- /home/ollie/miniconda3/envs/ptycho311/bin/python3.11
cachedir: .pytest_cache
PyTorch: available
PyTorch version: 2.8.0+cu128
rootdir: /home/ollie/Documents/PtychoPINN2
configfile: pyproject.toml
plugins: anyio-4.9.0
collecting ... collected 3 items / 2 deselected / 1 selected

tests/torch/test_data_pipeline.py::TestDataContainerParity::test_data_container_shapes_and_dtypes FAILED [100%]

=================================== FAILURES ===================================
________ TestDataContainerParity.test_data_container_shapes_and_dtypes _________

self = <test_data_pipeline.TestDataContainerParity object at 0x7f9ea59711d0>
params_cfg_snapshot = None
minimal_raw_data = <ptycho.raw_data.RawData object at 0x7f9e543d15d0>

    def test_data_container_shapes_and_dtypes(self, params_cfg_snapshot, minimal_raw_data):
        """
        PtychoDataContainerTorch must expose same attributes as TensorFlow container.
    
        Expected attributes (from data_contract.md §3):
        - X: (n_images, N, N, gridsize²) float32 — diffraction patterns
        - Y: (n_images, N, N, gridsize²) complex64 — combined ground truth
        - Y_I: (n_images, N, N, gridsize²) float32 — amplitude patches
        - Y_phi: (n_images, N, N, gridsize²) float32 — phase patches
        - coords_nominal: (n_images, 2) float32 — scan coordinates
        - probe: (N, N) complex64 — probe function
        - nn_indices: (n_images, gridsize²) int32 — nearest neighbor indices
        - global_offsets: (n_images, 1, 2, 1) float32 — coordinate offsets
    
        Test source: data_contract.md:179-200
        ROI: N=64, gridsize=2, nsamples=10
        """
        # Create TensorFlow baseline container
        from ptycho import loader
    
        def grouped_data_callback():
            """Callback for loader.load() (per data_contract.md §4)."""
            return minimal_raw_data.generate_grouped_data(
                N=64, K=4, nsamples=10, gridsize=2
            )
    
        # Probe as TensorFlow tensor (required by loader)
        import tensorflow as tf
        probe_tf = tf.convert_to_tensor(minimal_raw_data.probeGuess, dtype=tf.complex64)
    
        # Create TensorFlow container baseline
        tf_container = loader.load(
            cb=grouped_data_callback,
            probeGuess=probe_tf,
            which='train',
            create_split=False
        )
    
        # Validate baseline attributes
        assert hasattr(tf_container, 'X'), "TensorFlow container missing X"
        assert hasattr(tf_container, 'Y'), "TensorFlow container missing Y"
        assert hasattr(tf_container, 'coords_nominal'), "TensorFlow container missing coords_nominal"
        assert tf_container.X.shape == (10, 64, 64, 4), "TensorFlow X shape mismatch"
        assert tf_container.Y.dtype == tf.complex64, "TensorFlow Y dtype mismatch"
    
        # TODO (Phase C.C2): Implement PtychoDataContainerTorch
        # Expected implementation:
        #   from ptycho_torch.data_container import PtychoDataContainerTorch
        #   pt_container = PtychoDataContainerTorch.from_raw_data(...)
        #
        # Expected assertions (API parity):
        #   assert hasattr(pt_container, 'X')
        #   assert hasattr(pt_container, 'Y')
        #   assert hasattr(pt_container, 'coords_nominal')
        #   assert pt_container.X.shape == tf_container.X.shape
        #   if TORCH_AVAILABLE:
        #       assert isinstance(pt_container.X, torch.Tensor)
        #   else:
        #       assert isinstance(pt_container.X, np.ndarray)
    
>       pytest.fail(
            "PtychoDataContainerTorch not yet implemented (Phase C.C2). "
            "Expected module: ptycho_torch/data_container.py or loader_bridge.py. "
            "Required attributes per data_contract.md §3: "
            "X, Y, Y_I, Y_phi, coords_nominal, probe, nn_indices, global_offsets. "
            "See plans/active/INTEGRATE-PYTORCH-001/reports/2025-10-17T070200Z/data_contract.md §3 "
            "for complete attribute table with shapes and dtypes."
        )
E       Failed: PtychoDataContainerTorch not yet implemented (Phase C.C2). Expected module: ptycho_torch/data_container.py or loader_bridge.py. Required attributes per data_contract.md §3: X, Y, Y_I, Y_phi, coords_nominal, probe, nn_indices, global_offsets. See plans/active/INTEGRATE-PYTORCH-001/reports/2025-10-17T070200Z/data_contract.md §3 for complete attribute table with shapes and dtypes.

tests/torch/test_data_pipeline.py:219: Failed
---------------------------- Captured stdout setup -----------------------------
diff3d shape: (100, 64, 64)
probeGuess shape: (64, 64)
scan_index shape: (100,)
objectGuess shape: (128, 128)
xcoords shape: (100,)
ycoords shape: (100,)
xcoords_start shape: (100,)
ycoords_start shape: (100,)
---------------------------- Captured stderr setup -----------------------------
2025-10-17 00:25:19.228441: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1760685919.240227 3427603 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1760685919.244090 3427603 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
W0000 00:00:1760685919.255001 3427603 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1760685919.255022 3427603 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1760685919.255025 3427603 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1760685919.255027 3427603 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
2025-10-17 00:25:19.257784: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
----------------------------- Captured stdout call -----------------------------
DEBUG: nsamples: 10, gridsize: 2 (using efficient random sample-then-group strategy)
INFO: 'Y' array not found. Generating ground truth patches from 'objectGuess' as a fallback.
neighbor-sampled diffraction shape (10, 64, 64, 4)
loader: using provided ground truth patches.
INFO: train
<PtychoDataContainer X=(10, 64, 64, 4) Y_I=(10, 64, 64, 4) Y_phi=(10, 64, 64, 4) norm_Y_I=() coords_nominal=(10, 1, 2, 4) coords_true=(10, 1, 2, 4) nn_indices=(10, 4) mean=59.900 global_offsets=(10, 1, 2, 1) mean=5.778 local_offsets=(10, 1, 2, 4) mean=0.000 probe=(64, 64)>
----------------------------- Captured stderr call -----------------------------
I0000 00:00:1760685922.011187 3427603 gpu_process_state.cc:208] Using CUDA malloc Async allocator for GPU: 0
I0000 00:00:1760685922.012707 3427603 gpu_device.cc:2019] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 22111 MB memory:  -> device: 0, name: NVIDIA GeForce RTX 3090, pci bus id: 0000:04:00.0, compute capability: 8.6
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
I0000 00:00:1760685923.008972 3427603 service.cc:152] XLA service 0x5293c560 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
I0000 00:00:1760685923.008999 3427603 service.cc:160]   StreamExecutor device (0): NVIDIA GeForce RTX 3090, Compute Capability 8.6
2025-10-17 00:25:23.022137: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:269] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
I0000 00:00:1760685923.041838 3427603 cuda_dnn.cc:529] Loaded cuDNN version 91002
I0000 00:00:1760685923.168203 3427603 device_compiler.h:188] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.
=========================== short test summary info ============================
FAILED tests/torch/test_data_pipeline.py::TestDataContainerParity::test_data_container_shapes_and_dtypes - Failed: PtychoDataContainerTorch not yet implemented (Phase C.C2). Expected module: ptycho_torch/data_container.py or loader_bridge.py. Required attributes per data_contract.md §3: X, Y, Y_I, Y_phi, coords_nominal, probe, nn_indices, global_offsets. See plans/active/INTEGRATE-PYTORCH-001/reports/2025-10-17T070200Z/data_contract.md §3 for complete attribute table with shapes and dtypes.
======================= 1 failed, 2 deselected in 5.64s ========================
