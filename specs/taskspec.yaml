# Specification Template
> Ingest the information from this file, implement the Low-Level Tasks, and generate the code that will satisfy the High and Mid-Level Objectives.

## High-Level Objective

- Adapt the codebase to support per-sample probe tensors instead of a global probe variable, enabling each sample to utilize its own probe tensor.

## Mid-Level Objective

- Introduce a new data container that holds multiple probe tensors and associates each sample with a corresponding probe index.
- Modify data loading and preprocessing workflows to handle multiple probes and assign appropriate probe indices to each sample.
- Update the model architecture and training processes to utilize per-sample probe tensors based on the provided indices.
- Ensure seamless integration of the new data structures with existing modules, maintaining data integrity and model performance.

## Implementation Notes

- **Technical Details:**
  - Implement a new data container class (e.g., `MultiPtychoDataContainer`) to store a list of `tf.Tensor` probes.
  - Add a `probe_indices` attribute with dtype `int64`, matching the first dimension of data tensors like `X`, `Y_I`, etc.
  - Ensure all probe tensors have consistent shape and dtype.
- **Dependencies and Requirements:**
  - Update dependencies in `./ptycho/raw_data.py`, `./ptycho/workflows/components.py`, and other affected modules.
  - Ensure compatibility with TensorFlow operations and existing data pipelines.
- **Coding Standards:**
  - Follow existing codebase conventions for naming, documentation, and code structure.
  - Include comprehensive docstrings and comments for new attributes and functions.
- **Other Technical Guidance:**
  - Implement robust error handling for probe index assignments and data integrity checks.
  - Optimize data loading and shuffling mechanisms to handle interleaved datasets efficiently.

## Context

### Beginning Context

- `./ptycho/loader.py`
- `./ptycho/raw_data.py`
- `./ptycho/workflows/components.py`
- `./ptycho/train_pinn.py`
- `./ptycho/model.py`
- `./ptycho/tf_helper.py`

### Ending Context  

- `./ptycho/loader.py` (updated)
- `./ptycho/raw_data.py` (updated)
- `./ptycho/workflows/components.py` (updated)
- `./ptycho/train_pinn.py` (updated)
- `./ptycho/model.py` (updated)
- `./ptycho/tf_helper.py` (updated)
- Any new files introduced to support the changes

## Low-Level Tasks
> Ordered from start to finish

1. **Create a New MultiPtychoDataContainer Class in `loader.py`**