Files_Requiring_Updates:
  - path: "./ptycho/loader.py"
    reason: "Manages the creation and handling of PtychoDataContainer instances, which currently store a single probe tensor. To support multiple probes, this file needs to be adapted to handle multiple probes and associate each sample with the correct probe index."
    spec_of_changes:
      - "Introduce a new data container class (e.g., MultiPtychoDataContainer) that includes a list of probe tensors."
      - "Add a new attribute `probe_indices` to store the index of the probe associated with each sample, ensuring it matches the first dimension of `X`, `Y_I`, etc."
      - "Modify data loading functions to assign appropriate probe indices to each sample based on the dataset."
      - "Ensure that probe indices are of dtype `int64`."
    dependencies_affected:
      - "./ptycho/raw_data.py"
      - "./ptycho/workflows/components.py"
      - "./ptycho/train_pinn.py"
  
  - path: "./ptycho/raw_data.py"
    reason: "Generates PtychoDataContainer instances, currently assuming a single probe. Needs to support multiple probes by associating each sample with a probe index."
    spec_of_changes:
      - "Update data generation methods to accept and store multiple probe tensors."
      - "Implement logic to assign probe indices to each sample during data creation."
      - "Ensure compatibility with the new MultiPtychoDataContainer structure."
    dependencies_affected:
      - "./ptycho/loader.py"

  - path: "./ptycho/workflows/components.py"
    reason: "Creates PtychoDataContainer instances for training and testing, currently handling a single probe. Needs to handle multiple probes and associate each sample with the correct probe index."
    spec_of_changes:
      - "Modify the factory function to create instances of MultiPtychoDataContainer instead of PtychoDataContainer."
      - "Implement logic to shuffle and interleave samples from multiple datasets during training."
      - "Ensure that each sample includes a probe index referencing the correct probe in the probes list."
    dependencies_affected:
      - "./ptycho/loader.py"
      - "./ptycho/train_pinn.py"

  - path: "./ptycho/train_pinn.py"
    reason: "Handles the training of the CDI model using data from PtychoDataContainer, which currently assumes a single probe. Needs to adapt to handle per-sample probes by utilizing probe indices."
    spec_of_changes:
      - "Modify training functions to accept probe indices as part of the input data."
      - "Adjust the model input pipelines to fetch the correct probe tensor based on probe indices for each sample."
      - "Ensure that the training process correctly associates each input sample with its corresponding probe."
    dependencies_affected:
      - "./ptycho/workflows/components.py"
      - "./ptycho/model.py"

  - path: "./ptycho/model.py"
    reason: "Defines the model architecture which currently uses a global probe tensor. Needs to be adapted to handle per-sample probe tensors based on probe indices."
    spec_of_changes:
      - "Update the model inputs to include probe tensors for each sample."
      - "Modify layers that apply the probe to utilize the per-sample probe tensors instead of a single global probe."
      - "Ensure that the model architecture can dynamically handle varying probe tensors for each input sample."
    dependencies_affected:
      - "./ptycho/tf_helper.py"
      - "./ptycho/probe.py"

  - path: "./ptycho/tf_helper.py"
    reason: "Contains helper functions related to probe operations within the model. Needs to support handling multiple probe tensors."
    spec_of_changes:
      - "Update probe-related helper functions to accept and process per-sample probe tensors."
      - "Ensure compatibility with the updated model architecture supporting multiple probes."
    dependencies_affected:
      - "./ptycho/model.py"
      - "./ptycho/probe.py"

Architectural_Impact_Assessment:
  description: >
    Adapting the codebase to support per-sample probe tensors introduces increased flexibility and scalability, allowing the model to handle diverse probing conditions within a single dataset. The primary architectural change involves transitioning from a one-to-one relation between a PtychoDataContainer and a probe tensor to a one-to-many relationship where a single data container can reference multiple probes via probe indices. This necessitates modifications across data loading, preprocessing, and model architecture to ensure that each training sample is correctly associated with its corresponding probe tensor. The interleaving and shuffling of samples from multiple datasets during training introduce additional complexity in data handling pipelines, requiring robust indexing and mapping mechanisms. Overall, the changes enhance the system's capability to model varied probing scenarios but require careful coordination across multiple modules to maintain data integrity and model performance.

Questions_for_Clarification:
  - "Are there any constraints on the maximum number of distinct probes the system should support?"
  - "Should probe tensors be mutable during training, or remain fixed once defined?"
  - "Is there a need for backward compatibility with existing single-probe datasets?"